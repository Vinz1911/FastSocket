# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)
# project version number
version = get_version_number(xcodeproj: "FastSocketKit.xcodeproj", target: "FastSocketKit")
UI.message("Current project version: " + version)

platform :ios do

  desc "build with Xcode tools"
  lane :build_xcode do
    UI.message("start building")
      xcodebuild(
        archive: nil,
        scheme: "FastSocketKit",
        destination: "generic/platform=iOS",
        sdk: "iphoneos"
      )
    UI.success("finished building")
  end

  desc "run unit tests"
  lane :test_xcode do
    UI.message("performing unit tests")
    run_tests(
      devices: ["iPhone 11"],
      scheme: "FastSocketKit")
    UI.success("finished unit tests")
  end
  
  desc "archive for generic ios"
  lane :archive_generic_ios_xcode do
    # build and archive for generic ios platform
    UI.message("archive for generic ios platform")
    xcodebuild(
      archive: true,
      archive_path: "./fastlane/framework/FastSocketKit_iOS.xcarchive",
      scheme: "FastSocketKit",
      destination: "generic/platform=iOS",
      sdk: "iphoneos"
    )
  end
  
  desc "archive for ios simulator platform"
  lane :archive_ios_simulator_xcode do
    UI.message("successfully archived")
    # build and archive for ios simulator platform
    UI.message("archive for ios simulator")
    xcodebuild(
      archive: true,
      archive_path: "./fastlane/framework/FastSocketKit_Simulator.xcarchive",
      scheme: "FastSocketKit",
      destination: "platform=iOS Simulator,name=iPhone 11",
      sdk: "iphonesimulator"
    )
    UI.message("successfully archived")
  end
  
  desc "create archive and .xcframework"
  lane :build_framework_xcode do
    # create .xcframework from the archives
    UI.message("create framework")
    sh("xcodebuild -create-xcframework -framework ./framework/FastSocketKit_iOS.xcarchive/Products/Library/Frameworks/FastSocketKit.framework -framework ./framework/FastSocketKit_Simulator.xcarchive/Products/Library/Frameworks/FastSocketKit.framework -output ./framework/FastSocketKit.xcframework")
    UI.message("successfully created")
  end
  
  desc "release framework"
  lane :release_framework do
    # tag and release to github
    github_release = set_github_release(
      repository_name: "Vinz1911/FastSocket",
      api_token: ENV["GITHUB_RELEASE"],
      name: "Framework Release " + version,
      tag_name: version,
      description: (File.read("./CHANGELOG.md") rescue "Changelog is missing!"),
      upload_assets: ["./fastlane/framework/FastSocketKit.xcframework"]
    )
  end

end
